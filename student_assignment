<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Student Assignments</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style>
body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background: linear-gradient(135deg, #ffc0cb, #800000);
  margin: 0;
  padding: 0;
}
.container {
  max-width: 1000px;
  margin: 30px auto;
  padding: 20px;
  background: white;
  border-radius: 12px;
  box-shadow: 0 4px 15px rgba(0,0,0,0.2);
}
h2 {
  text-align: center;
  color: #800000;
  margin-bottom: 15px;
}
#studentName {
  font-weight: bold;
  margin-bottom: 20px;
  display: block;
  text-align: center;
  color: #800000;
}
input[type="text"] {
  width: 100%;
  padding: 10px;
  margin-bottom: 15px;
  border-radius: 8px;
  border: 1px solid #800000;
  font-size: 16px;
}
table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 20px;
}
table th, table td {
  padding: 10px;
  border: 1px solid #800000;
  text-align: left;
}
table th {
  background-color: #f2f2f2;
}
.view-btn, .download-btn {
  background-color: #800000;
  color: white;
  border: none;
  padding: 6px 12px;
  border-radius: 6px;
  cursor: pointer;
  font-weight: bold;
  margin-right: 5px;
}
.view-btn:hover, .download-btn:hover {
  background-color: #b22222;
}
#notification {
  text-align: center;
  color: green;
  font-weight: bold;
  margin-bottom: 10px;
  display: none;
}

/* Modal */
.modal {
  display: none;
  position: fixed;
  z-index: 999;
  padding-top: 80px;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0,0,0,0.6);
}
.modal-content {
  background-color: #fff;
  margin: auto;
  padding: 20px;
  border-radius: 12px;
  max-width: 800px;
  position: relative;
}
.close {
  color: #800000;
  float: right;
  font-size: 28px;
  font-weight: bold;
  cursor: pointer;
}
.close:hover {
  color: #b22222;
}
</style>
</head>
<body>
<div class="container">
<h2>Student Assignments Dashboard</h2>
<span id="studentName"></span>

<input type="text" id="searchInput" placeholder="Search assignments by title, description, due date, or date given..." onkeyup="filterTable()">

<table id="assignmentTable">
  <thead>
    <tr>
      <th>Title</th>
      <th>Description</th>
      <th>Due Date</th>
      <th>Date Given</th>
      <th>Actions</th>
    </tr>
  </thead>
  <tbody></tbody>
</table>
<div id="notification"></div>
</div>

<!-- Modal for PDF preview -->
<div id="pdfModal" class="modal">
  <div class="modal-content">
    <span class="close" onclick="closeModal()">&times;</span>
    <div id="pdfContent"></div>
    <button class="download-btn" onclick="downloadPDF()">Download PDF</button>
  </div>
</div>

<script>
const url = 'https://script.google.com/macros/s/AKfycbw9P_XOd4k498l0e4WDbFqAF1asb2u4sRj_uX2B-2S1MvyWOeWQZqxy8dr13mPOdNOeuw/exec';
const studentId = localStorage.getItem('studentId');
const studentName = localStorage.getItem('studentName');
const studentClass = localStorage.getItem('studentClass') || '';
document.getElementById('studentName').textContent = `Welcome, ${studentName || ''}`;

let assignments = [];
let selectedAssignment = null;

async function fetchAssignments() {
  if (!studentId) return;
  const params = new URLSearchParams();
  params.append('action', 'getStudentAssignments');
  params.append('role', 'student');
  params.append('studentId', studentId);
  params.append('studentClass', studentClass);

  try {
    const response = await fetch(`${url}?${params.toString()}`);
    const data = await response.json();
    if (data.success) {
      assignments = data.assignments || [];
      renderTable(assignments);
    } else {
      alert(data.message || 'Failed to fetch assignments');
    }
  } catch (err) {
    console.error(err);
    alert('Network error or server issue');
  }
}

function renderTable(list) {
  const tbody = document.querySelector('#assignmentTable tbody');
  tbody.innerHTML = '';
  list.forEach(a => {
    const dueDate = new Date(a.DueDate).toLocaleString();
    const dateGiven = new Date(a.Timestamp).toLocaleString();
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${a.Title}</td>
      <td>${a.Description}</td>
      <td>${dueDate}</td>
      <td>${dateGiven}</td>
      <td>
        <button class="view-btn" onclick='viewPDF(${JSON.stringify(a)})'>View</button>
      </td>
    `;
    tbody.appendChild(tr);
  });
}

function filterTable() {
  const term = document.getElementById('searchInput').value.toLowerCase();
  const filtered = assignments.filter(a =>
    a.Title.toLowerCase().includes(term) ||
    a.Description.toLowerCase().includes(term) ||
    new Date(a.DueDate).toLocaleString().toLowerCase().includes(term) ||
    new Date(a.Timestamp).toLocaleString().toLowerCase().includes(term)
  );
  renderTable(filtered);
}

// PDF Modal
function viewPDF(assignment) {
  selectedAssignment = assignment;
  const pdfContent = document.getElementById('pdfContent');
  pdfContent.innerHTML = `
    <h3>${assignment.Title}</h3>
    <p><strong>Description:</strong> ${assignment.Description}</p>
    <p><strong>Due Date:</strong> ${new Date(assignment.DueDate).toLocaleString()}</p>
    <p><strong>Date Given:</strong> ${new Date(assignment.Timestamp).toLocaleString()}</p>
  `;
  document.getElementById('pdfModal').style.display = 'block';
}

function closeModal() {
  document.getElementById('pdfModal').style.display = 'none';
}

function downloadPDF() {
  if (!selectedAssignment) return;
  const notif = document.getElementById('notification');
  notif.style.display = 'block';
  notif.textContent = 'Downloading PDF...';

  const { jsPDF } = window.jspdf;
  const doc = new jsPDF();
  doc.setFontSize(16);
  doc.text(`Title: ${selectedAssignment.Title}`, 10, 20);
  doc.setFontSize(12);
  doc.text(`Description: ${selectedAssignment.Description}`, 10, 30);
  doc.text(`Due Date: ${new Date(selectedAssignment.DueDate).toLocaleString()}`, 10, 40);
  doc.text(`Date Given: ${new Date(selectedAssignment.Timestamp).toLocaleString()}`, 10, 50);

  doc.save(`${selectedAssignment.Title}.pdf`);
  notif.textContent = 'Download Complete!';
  setTimeout(() => {
    notif.style.display = 'none';
  }, 2000);
}

// Close modal when clicking outside
window.onclick = function(event) {
  const modal = document.getElementById('pdfModal');
  if (event.target == modal) modal.style.display = "none";
};

// Load jsPDF then fetch assignments
const script = document.createElement('script');
script.src = 'https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js';
script.onload = fetchAssignments;
document.body.appendChild(script);
</script>
</body>
</html>
